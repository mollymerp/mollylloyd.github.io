select count(*) from round_nodes where elevation is not null;
select count(*) from round_nodes where elevation is not null;
select count(*) from round_nodes where elevation is not null;
select count(*) from round_nodes where elevation is not null;
\d
\d
\d phys_contours_wgs_gid_seq 
WITH objects AS
    (SELECT
        name,
        (ST_Dump(roads.geom)).geom AS geometries
    FROM roads),
point AS
    (SELECT
        'SRID=4326;POINT(long lat)'::geometry AS point
);
\d phys_contours_wgs
WITH lines AS (SELECT gid, ST_DUMP(phys_contours_wgs.geom)).geom AS geometries FROM phys_contours_wgs), point AS
(SELECT 'SRID=4326;POINT(long lat)'::geometry AS point);
WITH contours AS
    (SELECT
        gid, elevation,
        (ST_Dump(phys_contours_wgs.geom)) AS geoms
    FROM phys_contours_wgs),
point AS
    (SELECT
        ST_SetSRID(ST_MakePoint(node.lon, node.lat),4326) AS point
    );
WITH contours AS
    (SELECT
        gid, elevation,
        (ST_Dump(phys_contours_wgs.geom)) AS geoms
    FROM phys_contours_wgs);
WITH contours AS
    (SELECT
        gid, elevation,
        (ST_Dump(phys_contours_wgs.geom)) AS geoms
    FROM phys_contours_wgs)
;
ST_Dump(phys_contours_wgs.geom)
;
\h ST_DUMP
\h ST_DISTANCE
WITH contours AS
    (SELECT
        gid, elevation,
        (ST_Dump(phys_contours_wgs.geom)) AS geoms
    FROM phys_contours_wgs)
;
WITH contours AS
    (SELECT
        gid, elevation,
        (ST_Dump(phys_contours_wgs.geom)) AS geoms
    FROM phys_contours_wgs)
SELECT DISTINCT ON
    (ST_Distance(ST_SetSRID(ST_MakePoint(node.lon, node.lat),4326), geoms)),
    contours.elevation, contours.gid
FROM nodes as node, contours
    ORDER BY ST_Distance(ST_SetSRID(ST_MakePoint(node.lon, node.lat),4326), geoms)
    LIMIT 1;
select * from nodes limit 5;
SELECT r.elevation,ST_Distance(r.geom,ST_SetSRID(ST_MakePoint(-122.45872660 , 37.71830490),4326)) FROM phys_contours_wgs r, nodes node ORDER BY 2 ASC LIMIT 1;
select (*) from nodes limit 5;
select * from nodes limit 5;
\d
\d Elevations
\d nodes
\d Elevations
\d Elevations
\d
drop Elevations
;
DROP TABLE ELEVATIONS;
\d elevations
DROP INDEX elevations;
create table elevations
;
create table elevations;
create table elevation
;
;
CREATE TABLE new_elevations;
\q
\c sf_routing 
\d
\d Elevations
create table elevation;
\d nodes
CREATE TABLE elevate_data id bigint, lon numeric(11,8), lat numeric(11,8), elevation numeric(10,4);
CREATE TABLE elevate_data (id bigint, lon numeric(11,8), lat numeric(11,8), elevation numeric(10,4));
\d
select * from elevate_data limit 5;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select a.*, b.lat as el_lat, b.lon as el_lon FROM nodes a, elevate_data b WHERE a.id=b.id limit 10;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from elevate_data where id is not null;
select count(*) from nodes where numofuse > 1l;
select count(*) from nodes where numofuse > 1;
select count(*) from elevate_data where id is not null;
select count(*), lat, lon fron elevate_data group by lat, lon where count > 2;
select count(*), lat, lon from elevate_data group by lat, lon where count > 2;
select count(*), lat, lon from elevate_data where count > 2 group by lat, lon;
select count(*), lat, lon from elevate_data where count(*) > 2 group by lat, lon;
select count(*), lat, lon from elevate_data group by lat, lon limit 20;
select a.id, count(*), b.lat, b.lon fron elevate_data b, nodes a WHERE a.lat=b.lat AND a.lon=b.lon group by b.lat, b.lon where limit 20;
select a.id, count(*), b.lat, b.lon from elevate_data b, nodes a WHERE a.lat=b.lat AND a.lon=b.lon group by b.lat, b.lon where limit 20;
select a.id, count(*), b.lat, b.lon from elevate_data b, nodes a WHERE a.lat=b.lat AND a.lon=b.lon group by b.lat, b.lon limit 20;
select a.id, count(*), b.lat, b.lon from elevate_data b, nodes a WHERE a.lat=b.lat AND a.lon=b.lon group by a.id, b.lat, b.lon limit 20;
select count(*) from elevate_data;
create table elevation as 
select distinct lat, lon, elevation from elevate_data;
select count(*) from elevate_data;
select count(*) from elevation;
drop table elevate_data;
\d elevation 
\d round_nodes 
select count(*) from elevation;
create index el_idx on elevation(lat,lon);
\d elevation 
select (*) from elevation limit 5;
select count(*) from elevation limit 5;
select * from elevation limit 5;
create index el_round_idx on elevation(round(lat,5),round(lon,5));
select * from elevation limit 5;
\d elevation 
\d nodes
select * from elevation limit 5;
SELECT a.* FROM nodes a LEFT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is null limit 10;
select * from elevation where lon = -122.46350590 and lat = 37.75079590;
SELECT count(*) FROM nodes a LEFT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is null;
SELECT b.* FROM nodes a LEFT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is null limit 10;
SELECT b.* FROM nodes a LEFT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon not is null limit 10;
SELECT b.* FROM nodes a LEFT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is not null limit 10;
SELECT b.* FROM nodes a LEFT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is not null limit;
SELECT b.* FROM nodes a LEFT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is not null;
SELECT count(b.*) FROM nodes a LEFT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is not null;
SELECT count(b.*) FROM nodes a LEFT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is null;
SELECT count(b.*) FROM nodes a RIGHT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is null;
SELECT count(b.*) FROM nodes a RIGHT JOIN elevation b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE  b.lon is null;
\d elevation 
create table elevation_id as
select * from elevation;
alter table elevation_id add column id bigint;
select count(*) from elevation_id;
select count(*) from elevation_id;
\d nodes
select count(*) from elevation_id;
select count(*) from elevation_id;
select count(lat, lon) from elevation_id group by lat, lon;
select count(lat) from elevation_id group by lat, lon;
select count(lat) from elevation_id group by lat, lon;
select count(*) from elevation_id;
select count(*) from elevation_id;
select count(*) from elevation_id;
select count(*) from elevation_id;
select count(*) from elevation_id;
select count(*) from elevation_id;
select count(*) from elevation_id;
select count(*) from elevation_id;
selec count(*) from (select count(*) as oldCount from elevation_id) where oldCount>1;
select count(*) from (select count(*) as oldCount from elevation_id) where oldCount>1;
select count(*) from (select count(*) as oldCount from elevation_id) a where a.oldCount>1;
select * from (select count(*) as oldCount from elevation_id) a where a.oldCount>1;
select * from (select count(*) as oldCount group by (lat, lon) from elevation_id) a where a.oldCount>1;
select * from (select count(*) as oldCount from elevation_id group by lat, lon) a where a.oldCount>1;
select count(*) from (select count(*) as oldCount from elevation_id group by lat, lon) a where a.oldCount>1;
select count(*) from (select count(*) as oldCount from elevation_id group by round(lat,5), round(lon,5)) a where a.oldCount>1;
select distinct count(lat) from elevation_id group by lat, lon;
select * from (select lat, lon, count(*) as oldCount from elevation_id group by round(lat,5), round(lon,5)) a where a.oldCount>1 limit 10;
create table elevation as select distinct lat, lon, elevation from elevation_id;
\d elevation
\d elevation_id 
drop table elevation
;
create table elevation as select distinct lat, lon, elevation from elevation_id;
create index (round(lat,5),round(lon,5));
create index round_idx on (round(lat,5),round(lon,5));
create index round_idx on round(lat,5),round(lon,5);
create index round_idx on elevation round(lat,5),round(lon,5);
create index round_idx on elevation (round(lat,5),round(lon,5));
alter table elevation add column id bigint;
select count(*) from elevation;
select count(*) from elevation;
select count(*) from elevation;
 select lat, lon, count(*) from elevation group by lat, lon having count(*)>1;
 select count(*) from (select lat, lon, count(*) from elevation group by lat, lon having count(*)>1) a;
select count(*) from elevation;
select count(*) from elevation;
 select count(*) from (select lat, lon, count(*) from elevation group by lat, lon having count(*)>1) a;
CREATE TEMP TABLE p_temp AS SELECT DISTINCT ON (lat,lon) id, lat, lon, elevation FROM elevation; 
truncate elevation;
insert into elevation select * from p_temp;
\d elevation
select * from p_temp limit 10;
insert into elevation select * from p_temp;
select * from p_temp where lat > 1000 OR lon > 1000 limit 10;
select * from p_temp where lat < -1000 OR lon < -1000 limit 10;
insert into elevation select * from p_temp;
insert into elevation select id, lat, lon, elevation from p_temp;
alter table p_temp rename to elevation;
select * from elevation limit 5;
select count(*) from elevation;
 select count(*) from (select lat, lon, count(*) from elevation group by lat, lon having count(*)>1) a;
drop table p_temp;
alter table elevation add unique (lat, lon);
\d elevation
create index round_idx on elevation (round(lat,5), round(lon,5));
alter table elevation drop column id;
\d elevation
alter table elevation add column id serial primary key;
\d elevation
select * from elevation limit 5;
select count(*) from elevation;
select count(*) from elevation;
select count(*) from elevation;
\d
select count(*) from elevation;
select count(*) from elevation;
select * from elevation where lat=37.75829 AND lon = -122.43398
;
select count(*) from elevation;
\d elevation;
create table no_id as select lat, lon, elevation from elevation;
\d no_id
alter table no_id add column id serial;
alter table no_id rename to elevation_id;
drop table elevation_id 
;
alter table no_id rename to elevation_id;
select count(*) from elevation_id;
SELECT count(a.*) FROM nodes a LEFT JOIN elevation_id b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE b.lon is null AND b.lat is null;
select count(*) from nodes;
select count(*) from nodes where numofuse>1;
SELECT count(a.*) FROM nodes a LEFT JOIN elevation_id b ON round(a.lat,5) = round(b.lat,5) AND round(a.lon,5)=round(b.lon,5) WHERE b.lon is null AND b.lat is null AND a.numofuse>1;
\d elevaaaa
\d elevation
INSERT INTO "elevation" ("id","lat","lon","elevation") VALUES (DEFAULT,37.76844,-122.44843,96.07337951660156),(DEFAULT,37.75687,-122.43557,85.60977172851562),(DEFAULT,37.75687,-122.43538,85.52304077148438),(DEFAULT,37.75687,-122.43543,85.36897277832031),(DEFAULT,37.75687,-122.43564,86.30616760253906),(DEFAULT,37.75687,-122.43502,75.04151153564453),(DEFAULT,37.75687,-122.4356,85.86109161376953),(DEFAULT,37.75688,-122.43557,85.30757904052734),(DEFAULT,37.75688,-122.43494,72.82819366455078),(DEFAULT,37.75688,-122.43508,76.94331359863281),(DEFAULT,37.75688,-122.43504,75.43507385253906),(DEFAULT,37.75688,-122.43543,85.07725524902344),(DEFAULT,37.75689,-122.43482,70.38125610351562),(DEFAULT,37.75689,-122.43481,70.17857360839844),(DEFAULT,37.7569,-122.43504,74.92656707763672),(DEFAULT,37.7569,-122.43497,72.93614196777344),(DEFAULT,37.75691,-122.43544,84.11798095703125),(DEFAULT,37.75691,-122.43543,84.14859008789062),(DEFAULT,37.75694,-122.43565,84.2474594116211),(DEFAULT,37.75694,-122.43498,72.09852600097656),(DEFAULT,37.75694,-122.43509,75.85884857177734),(DEFAULT,37.75694,-122.43561,83.73452758789062),(DEFAULT,37.75694,-122.43495,71.44432830810547),(DEFAULT,37.75694,-122.43498,72.09852600097656),(DEFAULT,37.75695,-122.43561,83.40140533447266),(DEFAULT,37.75695,-122.4356,83.30476379394531),(DEFAULT,37.75696,-122.43482,68.49989318847656),(DEFAULT,37.75696,-122.4348,68.05227661132812),(DEFAULT,37.75696,-122.43543,82.51497650146484),(DEFAULT,37.75696,-122.43541,82.56522369384766),(DEFAULT,37.75697,-122.43483,68.48698425292969),(DEFAULT,37.75697,-122.4348,67.84981536865234),(DEFAULT,37.75699,-122.43499,71.2492446899414),(DEFAULT,37.75699,-122.43495,70.39170837402344),(DEFAULT,37.75701,-122.43499,70.89716339111328),(DEFAULT,37.75701,-122.43495,70.06626892089844),(DEFAULT,37.75702,-122.43561,81.48026275634766),(DEFAULT,37.75702,-122.43483,67.61337280273438),(DEFAULT,37.75702,-122.43481,67.1961898803711),(DEFAULT,37.75703,-122.43542,80.07566833496094),(DEFAULT,37.75704,-122.43483,67.26970672607422),(DEFAULT,37.75704,-122.43481,66.84529876708984),(DEFAULT,37.75705,-122.43562,80.8534164428711),(DEFAULT,37.75705,-122.43499,70.25082397460938),(DEFAULT,37.75706,-122.43496,69.52778625488281),(DEFAULT,37.75706,-122.43543,79.0776138305664),(DEFAULT,37.75708,-122.43496,69.26608276367188),(DEFAULT,37.75709,-122.43484,66.60372924804688),(DEFAULT,37.75709,-122.43482,66.15538787841797),(DEFAULT,37.75709,-122.43504,70.89999389648438),(DEFAULT,37.75709,-122.4355,78.68048858642578),(DEFAULT,37.7571,-122.43496,68.96862030029297),(DEFAULT,37.7571,-122.43544,77.8836669921875),(DEFAULT,37.7571,-122.43484,66.41378021240234),(DEFAULT,37.7571,-122.43482,65.95911407470703),(DEFAULT,37.75711,-122.43563,79.61687469482422),(DEFAULT,37.75711,-122.4356,79.24337005615234),(DEFAULT,37.75712,-122.43551,77.96543884277344),(DEFAULT,37.75712,-122.43548,77.66609954833984),(DEFAULT,37.75712,-122.43565,79.5999755859375),(DEFAULT,37.75712,-122.4356,78.98009490966797),(DEFAULT,37.75713,-122.43504,70.0960922241211),(DEFAULT,37.75714,-122.43496,68.25762939453125),(DEFAULT,37.75715,-122.43502,69.21312713623047),(DEFAULT,37.75715,-122.43496,68.05069732666016),(DEFAULT,37.75716,-122.43485,65.4639892578125),(DEFAULT,37.75716,-122.4348,64.240966796875),(DEFAULT,37.75717,-122.43569,78.45077514648438),(DEFAULT,37.75717,-122.43565,78.03570556640625),(DEFAULT,37.75718,-122.43485,65.05985260009766),(DEFAULT,37.75718,-122.43558,76.96162414550781),(DEFAULT,37.75718,-122.43481,64.07920837402344),(DEFAULT,37.75719,-122.43549,75.79145050048828),(DEFAULT,37.75719,-122.43558,76.6443862915039),(DEFAULT,37.7572,-122.43552,75.75597381591797),(DEFAULT,37.75721,-122.43492,66.05854797363281),(DEFAULT,37.75721,-122.43504,68.1111831665039),(DEFAULT,37.75721,-122.43555,75.71469116210938),(DEFAULT,37.75722,-122.43502,67.47241973876953),(DEFAULT,37.75722,-122.43552,75.14241027832031),(DEFAULT,37.75722,-122.43485,64.32391357421875),(DEFAULT,37.75722,-122.43555,75.40386199951172),(DEFAULT,37.75722,-122.43492,65.85536193847656),(DEFAULT,37.75722,-122.43551,75.05668640136719),(DEFAULT,37.75723,-122.43481,63.2102165222168),(DEFAULT,37.75725,-122.43569,75.90074157714844),(DEFAULT,37.75725,-122.43485,63.83928680419922),(DEFAULT,37.75725,-122.43482,63.13850402832031),(DEFAULT,37.75726,-122.43551,73.82109832763672),(DEFAULT,37.75726,-122.43504,66.88328552246094),(DEFAULT,37.75726,-122.435,66.22845458984375),(DEFAULT,37.75729,-122.43505,66.71546173095703),(DEFAULT,37.75729,-122.435,65.94206237792969),(DEFAULT,37.7573,-122.43486,63.5596809387207),(DEFAULT,37.7573,-122.43481,62.34403991699219),(DEFAULT,37.75731,-122.43487,63.72010803222656),(DEFAULT,37.75732,-122.43481,62.13253021240234),(DEFAULT,37.75732,-122.43487,63.62736129760742),(DEFAULT,37.75733,-122.43486,63.27938842773438),(DEFAULT,37.75733,-122.43505,66.42770385742188),(DEFAULT,37.75734,-122.43499,65.5077896118164),(DEFAULT,37.75734,-122.43563,72.46611022949219),(DEFAULT,37.75734,-122.4356,72.2176284790039),(DEFAULT,37.75735,-122.43533,69.7020492553711),(DEFAULT,37.75735,-122.435,65.60018920898438),(DEFAULT,37.75736,-122.43499,65.43534851074219),(DEFAULT,37.75736,-122.43512,67.53697204589844),(DEFAULT,37.75736,-122.43528,69.42457580566406),(DEFAULT,37.75736,-122.43551,70.88453674316406),(DEFAULT,37.75736,-122.43488,63.50668334960938),(DEFAULT,37.75736,-122.43486,62.97440338134766),(DEFAULT,37.75736,-122.435,65.58136749267578),(DEFAULT,37.75737,-122.43544,70.02355194091797),(DEFAULT,37.75737,-122.4357,72.315185546875),(DEFAULT,37.75737,-122.43488,63.40283584594727),(DEFAULT,37.75737,-122.43564,71.6926040649414),(DEFAULT,37.75737,-122.43484,62.3329963684082),(DEFAULT,37.75738,-122.43542,69.61710357666016),(DEFAULT,37.75738,-122.43537,69.26363372802734),(DEFAULT,37.75738,-122.43488,63.29899215698242),(DEFAULT,37.75738,-122.43484,62.21616744995117),(DEFAULT,37.75739,-122.43488,63.19514465332031),(DEFAULT,37.75739,-122.43487,62.91906356811523),(DEFAULT,37.75739,-122.43561,70.84839630126953),(DEFAULT,37.7574,-122.43553,69.87797546386719),(DEFAULT,37.7574,-122.43513,67.59888458251953),(DEFAULT,37.7574,-122.43552,69.80158233642578),(DEFAULT,37.75741,-122.43551,69.4104995727539),(DEFAULT,37.75741,-122.435,65.2387466430664),(DEFAULT,37.75741,-122.43545,68.96693420410156),(DEFAULT,37.75741,-122.43543,68.84452056884766),(DEFAULT,37.75742,-122.43508,66.53643798828125),(DEFAULT,37.75742,-122.43562,70.04473876953125),(DEFAULT,37.75743,-122.435,64.92604064941406),(DEFAULT,37.75743,-122.43561,69.65398406982422),(DEFAULT,37.75743,-122.43543,68.22576904296875),(DEFAULT,37.75743,-122.43543,68.22576904296875),(DEFAULT,37.75743,-122.43487,62.04366683959961),(DEFAULT,37.75743,-122.43535,67.93495178222656),(DEFAULT,37.75744,-122.43534,67.6318359375),(DEFAULT,37.75744,-122.43484,60.98321533203125),(DEFAULT,37.75744,-122.43529,67.70196533203125),(DEFAULT,37.75744,-122.43538,67.63224792480469),(DEFAULT,37.75744,-122.43526,67.71998596191406),(DEFAULT,37.75744,-122.43535,67.6228256225586),(DEFAULT,37.75744,-122.43509,66.42108154296875),(DEFAULT,37.75744,-122.43508,66.2594985961914),(DEFAULT,37.75745,-122.43488,61.80804824829102),(DEFAULT,37.75745,-122.43485,60.99419784545898),(DEFAULT,37.75746,-122.43488,61.5427131652832),(DEFAULT,37.75746,-122.43487,61.27227783203125),(DEFAULT,37.75746,-122.43554,68.06204223632812),(DEFAULT,37.75746,-122.43563,68.9506607055664),(DEFAULT,37.75746,-122.43553,67.97925567626953),(DEFAULT,37.75746,-122.43561,68.748291015625),(DEFAULT,37.75746,-122.43561,68.748291015625),(DEFAULT,37.75746,-122.43561,68.748291015625),(DEFAULT,37.75747,-122.4351,65.98847961425781),(DEFAULT,37.75747,-122.435,64.07830047607422),(DEFAULT,37.75748,-122.43545,66.67684936523438),(DEFAULT,37.75748,-122.43544,66.62240600585938),(DEFAULT,37.75748,-122.43511,65.87789154052734),(DEFAULT,37.75749,-122.43527,65.92422485351562),(DEFAULT,37.75749,-122.43501,63.59694290161133),(DEFAULT,37.75749,-122.435,63.39287567138672),(DEFAULT,37.75749,-122.43494,62.08745956420898),(DEFAULT,37.7575,-122.43515,65.26714324951172),(DEFAULT,37.7575,-122.43563,67.73294067382812),(DEFAULT,37.7575,-122.43562,67.62944030761719),(DEFAULT,37.7575,-122.43488,60.27610778808594),(DEFAULT,37.7575,-122.43483,59.02222061157227),(DEFAULT,37.75751,-122.43561,67.21783447265625),(DEFAULT,37.75751,-122.43483,58.69702529907227),(DEFAULT,37.75751,-122.4356,67.115234375),(DEFAULT,37.75751,-122.43513,64.586669921875),(DEFAULT,37.75751,-122.43512,64.50311279296875),(DEFAULT,37.75751,-122.43482,58.45432662963867),(DEFAULT,37.75751,-122.435,62.55133819580078),(DEFAULT,37.75752,-122.43563,67.11310577392578),(DEFAULT,37.75752,-122.43495,61.12564086914062),(DEFAULT,37.75752,-122.43562,67.01141357421875),(DEFAULT,37.75752,-122.43542,65.01129913330078),(DEFAULT,37.75752,-122.43541,64.9376449584961),(DEFAULT,37.75752,-122.43572,67.67936706542969),(DEFAULT,37.75752,-122.43533,64.58728790283203),(DEFAULT,37.75752,-122.43537,64.665771484375),(DEFAULT,37.75752,-122.43536,64.64595031738281),(DEFAULT,37.75752,-122.43532,64.57333374023438),(DEFAULT,37.75753,-122.43572,67.39878845214844),(DEFAULT,37.75753,-122.43529,64.12024688720703),(DEFAULT,37.75753,-122.43527,64.09883117675781),(DEFAULT,37.75753,-122.43559,66.45136260986328),(DEFAULT,37.75753,-122.43541,64.61534118652344),(DEFAULT,37.75753,-122.43558,66.34910583496094),(DEFAULT,37.75753,-122.43551,65.58538055419922),(DEFAULT,37.75753,-122.43554,65.93157958984375),(DEFAULT,37.75753,-122.43553,65.8161849975586),(DEFAULT,37.75753,-122.43537,64.32080078125),(DEFAULT,37.75753,-122.43532,64.18733215332031),(DEFAULT,37.75753,-122.43546,65.00984191894531),(DEFAULT,37.75753,-122.43482,57.79862594604492),(DEFAULT,37.75753,-122.43529,64.12024688720703),(DEFAULT,37.75753,-122.43558,66.34910583496094),(DEFAULT,37.75754,-122.43483,57.68041229248047),(DEFAULT,37.75754,-122.43555,65.79191589355469),(DEFAULT,37.75754,-122.43573,67.16279602050781),(DEFAULT,37.75755,-122.43561,66.14585876464844),(DEFAULT,37.75755,-122.43559,65.94881439208984),(DEFAULT,37.75755,-122.43513,62.52370834350586),(DEFAULT,37.75755,-122.43512,62.43790054321289),(DEFAULT,37.75755,-122.43568,66.64875030517578),(DEFAULT,37.75756,-122.43567,66.32928466796875),(DEFAULT,37.75756,-122.43563,66.08740997314453),(DEFAULT,37.75756,-122.43562,65.98993682861328),(DEFAULT,37.75756,-122.43571,66.52174377441406),(DEFAULT,37.75756,-122.43569,66.42832946777344),(DEFAULT,37.75756,-122.43545,64.04148864746094),(DEFAULT,37.75756,-122.43554,65.17412567138672),(DEFAULT,37.75756,-122.43566,66.2705078125),(DEFAULT,37.75756,-122.43542,63.75630187988281),(DEFAULT,37.75756,-122.43551,64.78473663330078),(DEFAULT,37.75756,-122.43564,66.15296173095703),(DEFAULT,37.75756,-122.43484,57.1917724609375),(DEFAULT,37.75757,-122.43536,62.94417572021484),(DEFAULT,37.75757,-122.43534,62.81822204589844),(DEFAULT,37.75757,-122.43483,56.62679290771484),(DEFAULT,37.75758,-122.43528,62.10292434692383),(DEFAULT,37.75758,-122.43527,62.04023361206055),(DEFAULT,37.75758,-122.43523,61.79240036010742),(DEFAULT,37.75758,-122.43521,61.67079544067383),(DEFAULT,37.75759,-122.43517,60.84051513671875),(DEFAULT,37.75759,-122.43516,60.74235153198242),(DEFAULT,37.75759,-122.43512,60.29782485961914),(DEFAULT,37.75759,-122.43527,61.66075134277344),(DEFAULT,37.75759,-122.43511,60.1788215637207),(DEFAULT,37.75759,-122.43524,61.43584060668945),(DEFAULT,37.75759,-122.43483,55.8891716003418),(DEFAULT,37.75759,-122.43508,59.81069946289062),(DEFAULT,37.75759,-122.4352,61.13500595092773),(DEFAULT,37.75759,-122.43505,59.42022705078125),(DEFAULT,37.75759,-122.43484,56.06525421142578),(DEFAULT,37.75759,-122.43518,60.93867874145508),(DEFAULT,37.75759,-122.43502,59.01343536376953),(DEFAULT,37.7576,-122.43511,59.63262176513672),(DEFAULT,37.7576,-122.43508,59.25881958007812),(DEFAULT,37.7576,-122.43495,57.49379730224609),(DEFAULT,37.7576,-122.43505,58.87615585327148),(DEFAULT,37.7576,-122.43491,56.87952423095703),(DEFAULT,37.7576,-122.43502,58.48304748535156),(DEFAULT,37.7576,-122.43489,56.54546356201172),(DEFAULT,37.7576,-122.43485,55.85340118408203),(DEFAULT,37.75761,-122.43495,57.08849334716797),(DEFAULT,37.75761,-122.43484,55.3509635925293),(DEFAULT,37.75761,-122.43492,56.65090179443359),(DEFAULT,37.75761,-122.43489,56.18149948120117),(DEFAULT,37.75761,-122.43486,55.67234420776367),(DEFAULT,37.79198,-122.39873,3.376875877380371),(DEFAULT,37.75778,-122.43458,51.3949089050293),(DEFAULT,37.75778,-122.43457,51.40346145629883),(DEFAULT,37.75778,-122.4345,51.65069961547852),(DEFAULT,37.75778,-122.43447,51.78108978271484),(DEFAULT,37.75778,-122.43459,51.38635635375977),(DEFAULT,37.75778,-122.43443,51.88407516479492),(DEFAULT,37.75778,-122.43456,51.41201782226562),(DEFAULT,37.75779,-122.43441,51.73989486694336),(DEFAULT,37.75779,-122.43451,51.46389389038086),(DEFAULT,37.75779,-122.43447,51.61420059204102),(DEFAULT,37.75779,-122.43436,51.83876419067383),(DEFAULT,37.75779,-122.43444,51.68399429321289),(DEFAULT,37.75779,-122.43433,51.91336822509766),(DEFAULT,37.75779,-122.4344,51.75625228881836),(DEFAULT,37.75779,-122.43432,51.94068908691406),(DEFAULT,37.7578,-122.43436,51.65706253051758),(DEFAULT,37.7578,-122.43424,51.98131942749023),(DEFAULT,37.7578,-122.43432,51.75571823120117),(DEFAULT,37.7578,-122.4346,51.16721343994141),(DEFAULT,37.7578,-122.43432,51.75571823120117),(DEFAULT,37.7578,-122.43415,52.39603424072266),(DEFAULT,37.7578,-122.43459,51.17223358154297),(DEFAULT,37.75781,-122.43414,52.31806564331055),(DEFAULT,37.75781,-122.43408,52.75219345092773),(DEFAULT,37.75782,-122.43459,50.95811080932617),(DEFAULT,37.75782,-122.43404,52.93716430664062),(DEFAULT,37.75782,-122.43402,53.08800506591797),(DEFAULT,37.75782,-122.4346,50.95662307739258),(DEFAULT,37.75782,-122.43395,53.70184326171875),(DEFAULT,37.75783,-122.43393,53.81885528564453),(DEFAULT,37.75783,-122.43408,52.52125549316406),(DEFAULT,37.75783,-122.43407,52.59955215454102),(DEFAULT,37.75783,-122.43387,54.28753280639648),(DEFAULT,37.75783,-122.43385,54.43271255493164),(DEFAULT,37.75783,-122.43402,52.99549102783203),(DEFAULT,37.75783,-122.43398,53.34625244140625),(DEFAULT,37.75784,-122.43393,53.75068283081055),(DEFAULT,37.75784,-122.43447,50.78133392333984),(DEFAULT,37.75784,-122.43445,50.80342483520508),(DEFAULT,37.75784,-122.4339,54.01728439331055),(DEFAULT,37.75784,-122.43385,54.42063140869141),(DEFAULT,37.75784,-122.43381,54.73966598510742),(DEFAULT,37.75785,-122.43377,55.07889556884766),(DEFAULT,37.75785,-122.43372,55.37568283081055),(DEFAULT,37.75785,-122.4346,50.53342056274414),(DEFAULT,37.75785,-122.43416,51.51652526855469),(DEFAULT,37.75786,-122.43414,51.55462646484375),(DEFAULT,37.75786,-122.43379,54.93424224853516),(DEFAULT,37.75786,-122.43377,55.10315322875977),(DEFAULT,37.75786,-122.43459,50.39447784423828),(DEFAULT,37.75786,-122.43407,52.24248886108398),(DEFAULT,37.75786,-122.43404,52.52085876464844),(DEFAULT,37.75786,-122.43398,53.10161209106445),(DEFAULT,37.75786,-122.43459,50.39447784423828),(DEFAULT,37.75786,-122.43396,53.30657196044922),(DEFAULT,37.75786,-122.43447,50.4492301940918),(DEFAULT,37.75786,-122.43445,50.46196746826172),(DEFAULT,37.75786,-122.4339,53.91304779052734),(DEFAULT,37.75787,-122.43387,54.17014694213867),(DEFAULT,37.75787,-122.4346,50.24383544921875),(DEFAULT,37.75787,-122.43433,50.40288543701172),(DEFAULT,37.75789,-122.4346,49.94313812255859),(DEFAULT,37.75789,-122.43381,54.77261734008789),(DEFAULT,37.75789,-122.43379,54.95959091186523),(DEFAULT,37.75789,-122.43459,49.94889831542969),(DEFAULT,37.7579,-122.4346,49.79278945922852),(DEFAULT,37.75791,-122.43461,49.6458740234375),(DEFAULT,37.75791,-122.4341,51.25553131103516),(DEFAULT,37.75791,-122.43408,51.49191284179688),(DEFAULT,37.75792,-122.4345,49.48711013793945),(DEFAULT,37.75792,-122.43447,49.46170806884766),(DEFAULT,37.75793,-122.43461,49.37760925292969),(DEFAULT,37.75793,-122.434,52.11471176147461),(DEFAULT,37.75793,-122.43399,52.24138259887695),(DEFAULT,37.75793,-122.4346,49.37424468994141),(DEFAULT,37.75793,-122.43433,49.28305053710938),(DEFAULT,37.75793,-122.43391,53.26731491088867),(DEFAULT,37.75794,-122.4339,53.32267761230469),(DEFAULT,37.75794,-122.43416,50.01204299926758),(DEFAULT,37.75794,-122.43428,49.21045684814453),(DEFAULT,37.75794,-122.43415,50.14282989501953),(DEFAULT,37.75794,-122.43411,50.66067886352539),(DEFAULT,37.75794,-122.4341,50.78877639770508),(DEFAULT,37.75794,-122.43383,54.42387390136719),(DEFAULT,37.75794,-122.4346,49.23797225952148),(DEFAULT,37.75794,-122.4346,49.23797225952148),(DEFAULT,37.75794,-122.43382,54.52907180786133),(DEFAULT,37.75795,-122.43451,49.0301513671875),(DEFAULT,37.75795,-122.43449,49.00265121459961),(DEFAULT,37.75795,-122.43447,48.97602462768555),(DEFAULT,37.75795,-122.43447,48.97602462768555),(DEFAULT,37.75795,-122.43442,48.92310333251953),(DEFAULT,37.75795,-122.43415,49.97589874267578),(DEFAULT,37.75795,-122.43411,50.50244140625),(DEFAULT,37.75795,-122.43433,48.92489242553711),(DEFAULT,37.75796,-122.4345,48.85248947143555),(DEFAULT,37.75796,-122.43447,48.80866622924805),(DEFAULT,37.75796,-122.43428,48.85265731811523),(DEFAULT,37.75796,-122.43425,48.96694946289062),(DEFAULT,37.75796,-122.43442,48.74884796142578),(DEFAULT,37.75797,-122.43417,49.34761810302734),(DEFAULT,37.75797,-122.43436,48.54005813598633),(DEFAULT,37.75797,-122.43378,54.79080963134766),(DEFAULT,37.75797,-122.43373,55.12493515014648),(DEFAULT,37.75799,-122.43391,52.64599990844727),(DEFAULT,37.75799,-122.43389,53.02346801757812),(DEFAULT,37.75801,-122.43408,49.7208137512207),(DEFAULT,37.75801,-122.43401,50.68947601318359),(DEFAULT,37.75801,-122.434,50.83275985717773),(DEFAULT,37.75801,-122.43397,51.36047744750977),(DEFAULT,37.75801,-122.4345,48.01755523681641),(DEFAULT,37.75801,-122.43447,47.96005630493164),(DEFAULT,37.75801,-122.43447,47.96005630493164),(DEFAULT,37.75802,-122.43397,51.20135498046875),(DEFAULT,37.75802,-122.43442,47.6885871887207),(DEFAULT,37.75802,-122.43392,52.12565994262695),(DEFAULT,37.75802,-122.43389,52.73618698120117),(DEFAULT,37.75802,-122.43461,47.97525787353516),(DEFAULT,37.75802,-122.4346,47.96758651733398),(DEFAULT,37.75802,-122.43378,54.53693771362305),(DEFAULT,37.75802,-122.43436,47.62902450561523),(DEFAULT,37.75802,-122.43383,53.98461151123047),(DEFAULT,37.75803,-122.43374,54.81433868408203),(DEFAULT,37.75803,-122.4345,47.67190933227539),(DEFAULT,37.75803,-122.43449,47.65185928344727),(DEFAULT,37.75803,-122.43447,47.61162948608398),(DEFAULT,37.75803,-122.43374,54.81433868408203),(DEFAULT,37.75803,-122.43443,47.52969360351562),(DEFAULT,37.75803,-122.43372,54.77578353881836),(DEFAULT,37.75803,-122.43438,47.44198608398438),(DEFAULT,37.75804,-122.43449,47.47363662719727),(DEFAULT,37.75804,-122.43447,47.43228912353516),(DEFAULT,37.75805,-122.43394,51.40876770019531),(DEFAULT,37.75805,-122.43404,49.4598388671875),(DEFAULT,37.75806,-122.43388,52.68560791015625),(DEFAULT,37.75806,-122.43394,51.31209945678711),(DEFAULT,37.75806,-122.43383,53.82418441772461),(DEFAULT,37.75807,-122.43388,52.63767623901367),(DEFAULT,37.75807,-122.43373,54.488037109375),(DEFAULT,37.75807,-122.43378,54.28638076782227),(DEFAULT,37.75808,-122.43378,54.23812866210938),(DEFAULT,37.75809,-122.43377,54.24807739257812),(DEFAULT,37.75809,-122.43451,46.5963134765625),(DEFAULT,37.75809,-122.43444,46.43506622314453),(DEFAULT,37.75809,-122.43461,46.60313415527344),(DEFAULT,37.7581,-122.43462,46.38482666015625),(DEFAULT,37.7581,-122.43451,46.41143035888672),(DEFAULT,37.7581,-122.43405,48.28483581542969),(DEFAULT,37.7581,-122.43444,46.24936676025391),(DEFAULT,37.7581,-122.43444,46.24936676025391),(DEFAULT,37.75811,-122.43439,45.96132659912109),(DEFAULT,37.75811,-122.43395,50.59726715087891),(DEFAULT,37.75811,-122.43433,46.08388137817383),(DEFAULT,37.75811,-122.43377,54.13849639892578),(DEFAULT,37.75811,-122.43451,46.22654724121094),(DEFAULT,37.75811,-122.43404,48.28865814208984),(DEFAULT,37.75811,-122.43385,53.24271774291992),(DEFAULT,37.75811,-122.43395,50.59726715087891),(DEFAULT,37.75812,-122.43444,45.87797164916992),(DEFAULT,37.75812,-122.4339,51.97677612304688),(DEFAULT,37.75812,-122.43379,54.00992965698242),(DEFAULT,37.75812,-122.43395,50.50806045532227),(DEFAULT,37.75812,-122.43385,53.22353744506836),(DEFAULT,37.75812,-122.4339,51.97677612304688),(DEFAULT,37.75813,-122.43462,45.79412841796875),(DEFAULT,37.75813,-122.43462,45.79412841796875),(DEFAULT,37.75813,-122.43377,54.02913665771484),(DEFAULT,37.75813,-122.43462,45.79412841796875),(DEFAULT,37.75815,-122.43378,53.93752670288086),(DEFAULT,37.75815,-122.43377,53.92008209228516),(DEFAULT,37.75816,-122.4345,45.36515426635742),(DEFAULT,37.75816,-122.43445,45.30742263793945),(DEFAULT,37.75816,-122.43463,45.27965927124023),(DEFAULT,37.75816,-122.43401,48.43283843994141),(DEFAULT,37.75817,-122.4345,45.2044677734375),(DEFAULT,37.75817,-122.4346,45.14569854736328),(DEFAULT,37.75817,-122.43395,50.46527481079102),(DEFAULT,37.75817,-122.43395,50.46527481079102),(DEFAULT,37.75817,-122.43445,45.16461944580078),(DEFAULT,37.75817,-122.43442,45.14916610717773),(DEFAULT,37.75817,-122.43405,47.38771820068359),(DEFAULT,37.75817,-122.43409,46.48958206176758),(DEFAULT,37.75817,-122.43401,48.35741806030273),(DEFAULT,37.75817,-122.43454,45.22467422485352),(DEFAULT,37.75817,-122.4345,45.2044677734375),(DEFAULT,37.75817,-122.43403,47.87091445922852),(DEFAULT,37.75817,-122.43395,50.46527481079102),(DEFAULT,37.75818,-122.4346,44.96685028076172),(DEFAULT,37.75818,-122.43442,45.02069854736328),(DEFAULT,37.75818,-122.43385,53.35750198364258),(DEFAULT,37.75818,-122.43403,47.78314971923828),(DEFAULT,37.75818,-122.43454,45.05130386352539),(DEFAULT,37.75818,-122.43434,45.18138885498047),(DEFAULT,37.75818,-122.43461,44.95363235473633),(DEFAULT,37.75818,-122.43378,53.79140853881836),(DEFAULT,37.75818,-122.43395,50.44078063964844),(DEFAULT,37.75819,-122.43385,53.36011123657227),(DEFAULT,37.75819,-122.43454,44.87793731689453),(DEFAULT,37.75819,-122.43379,53.78739166259766),(DEFAULT,37.7582,-122.43379,53.74221420288086),(DEFAULT,37.7582,-122.43378,53.67513275146484),(DEFAULT,37.7582,-122.43433,45.03453826904297),(DEFAULT,37.7582,-122.43461,44.59680938720703),(DEFAULT,37.75821,-122.4346,44.42668914794922),(DEFAULT,37.75823,-122.43436,44.58749008178711),(DEFAULT,37.75823,-122.43434,44.68222427368164),(DEFAULT,37.75823,-122.43409,45.85021209716797),(DEFAULT,37.75823,-122.4338,53.60820388793945),(DEFAULT,37.75823,-122.43379,53.55351257324219),(DEFAULT,37.75823,-122.43397,49.41393661499023),(DEFAULT,37.75824,-122.43409,45.75261688232422),(DEFAULT,37.75824,-122.4339,52.09577560424805),(DEFAULT,37.75824,-122.43464,43.78993225097656),(DEFAULT,37.75824,-122.4338,53.54872131347656),(DEFAULT,37.75824,-122.43397,49.35022735595703),(DEFAULT,37.75824,-122.4346,43.84952926635742),(DEFAULT,37.75825,-122.4339,52.07362365722656),(DEFAULT,37.75825,-122.43452,43.88377380371094),(DEFAULT,37.75825,-122.43448,44.00042724609375),(DEFAULT,37.75825,-122.4338,53.48923492431641),(DEFAULT,37.75825,-122.43443,44.14508438110352),(DEFAULT,37.75826,-122.43436,44.29450607299805),(DEFAULT,37.75826,-122.43452,43.76527404785156),(DEFAULT,37.75826,-122.43448,43.88349151611328),(DEFAULT,37.75826,-122.4338,53.33402633666992),(DEFAULT,37.75826,-122.43443,44.03446197509766),(DEFAULT,37.75827,-122.43437,44.14615631103516),(DEFAULT,37.75827,-122.43379,53.1121940612793),(DEFAULT,37.75828,-122.43437,44.04503631591797),(DEFAULT,37.75828,-122.4341,45.28813552856445),(DEFAULT,37.75828,-122.43435,44.14141464233398),(DEFAULT,37.75829,-122.43398,48.3012809753418),(DEFAULT,37.75829,-122.43379,52.80612945556641),(DEFAULT,37.7583,-122.43386,52.14310073852539),(DEFAULT,37.7583,-122.43399,47.74365234375),(DEFAULT,37.7583,-122.43398,48.15666580200195),(DEFAULT,37.7583,-122.4338,52.68438720703125),(DEFAULT,37.7583,-122.43388,51.68297958374023),(DEFAULT,37.7583,-122.43386,52.14310073852539),(DEFAULT,37.75831,-122.43401,46.94193267822266),(DEFAULT,37.75831,-122.43399,47.60445022583008),(DEFAULT,37.75831,-122.43388,51.47343063354492),(DEFAULT,37.75831,-122.43438,43.69116973876953);
select count(*) from elevation;
select count(*) from elevation_id;
select count(*) from elevation_id;
select count(*) from elevation_id;
select count(*) from elevation_id having count(*)>1 group by lat, lon;
select count(*) from elevation_id group by lat, lon having count(*)>1;
select count(*) from (select count(*) from elevation_id group by lat, lon having count(*)>1) dups;
select sum(old) from (select count(*) as old from elevation_id group by lat, lon having count(*)>1) dups;
select count(*) from elevation_id;
select count(*) from elevation_id;
select sum(old) from (select count(*) as old from elevation_id group by lat, lon having count(*)>1) dups;
select sum(old) from (select count(*) as old from elevation_id group by lat, lon having count(*)>1) dups;
select sum(old) from (select count(*) as old from elevation_id group by lat, lon having count(*)>1) dups;
select count(*) from elevation_id;
select count(*) from elevation_id;
select sum(old) from (select count(*) as old from elevation_id group by lat, lon having count(*)>1) dups;
\d
drop table Elevations;
create temp table temp as select distinct on (lat, lon) id, lat, lon, elevation from elevation_id;
truncate elevation_id;
select count(*) from elevation_id;
insert into elevation_id select * from temp;
select count(*) from elevation_id;
insert into elevation_id select * from temp;
select count(*) from elevation_id;
drop table elevation;
create table elevation;
create table elevation as select * frmo temp;;
create table elevation as select * from temp;
alter table elevation add primary key (lat, lon);
select * from elevation where lat is null;
select count(*) from elevation where lat is null;
delete from elevation where lat is null;
alter table elevation add primary key (lat, lon);
\d elevation
SELECT a.* FROM nodes a WHERE round(a.lon,5) IS NOT IN (select round(lon,5) from elevation) LIMIT 10;
SELECT a.* FROM nodes a WHERE round(a.lon,5) NOT IN (select round(lon,5) from elevation) LIMIT 10;
\d nodes
create index round_idx on nodes (lat, lon);
alter index round_idx on nodes (round(lat,5), round(lon,5));
drop index round_idx;
create index round_idx on nodes (round(lat,5), round(lon,5));
\d elevation
create index round_idx on elevation (round(lat,5), round(lon,5));
create index round_el_idx on elevation (round(lat,5), round(lon,5));
select * from nodes where (lat, lon) not in (SELECT lat, lon from elevation) limit 10;
select count(*) from nodes where (lat, lon) not in (SELECT lat, lon from elevation) limit 10;
select count(*) from nodes where (round(lat,5), round(lon,5)) not in (SELECT round(lat,5), round(lon,5) from elevation) limit 10;
select count(*) from nodes where (round(lat,5), round(lon,5)) not in (SELECT round(lat,5), round(lon,5) from elevation) limit 10;
select * from elevation where round(lat, 5) = 37.74124;
select * from elevation where round(lat, 5) = 37.74124 and round(lon,5) = -122.49945;
select count(*) from round_nodes where (round_lat, round_lon) not in (SELECT lat, lon from elevation) limit 10;
select * from nodes where (round(lat,5), round(lon,5)) not in (SELECT round(lat,5), round(lon,5) from elevation) limit 10;
\d elevation_id
select count(*) from elevation_id;
\d elevation_id;
select count(*) from elevation;
\d elevation;
alter table elevation drop constraint elevation_pkey;
select * from nodes where (round(lat,5), round(lon,5)) not in (SELECT round(lat,5), round(lon,5) from elevation) limit 10;
select count(*) from elevation;
select count(*) from elevation where lat=0;
delete from elevation where lat=0 or lon=0;
select * from round_nodes limit 10;
select * from nodes where (round(lat,5), round(lon,5)) not in (SELECT round(lat,5), round(lon,5) from elevation) LIMIT 5;
select count(*) from elevation;
select * from elevation where round(lat,5) = 37.77739 AND round(lon,5) = -122.49514
;
select count(*) from elevation;
select * from elevation where round(lat,5) = 37.77746 AND round(lon,5) = -122.4945
;
select count(*) from elevation;
select * from nodes where (round(lat,5), round(lon,5)) not in 
                    (SELECT round(lat,5), round(lon,5) from elevation) LIMIT 5;
\d nodes
\d nodes
\d elevation
\d round nodes
\d round_nodes
select * from round_nodes where (round_lat, round_lon) not in 
                    (SELECT round(lat,5), round(lon,5) from elevation) LIMIT 5;
select * from elevation where round(lat,5) =  37.75962 and round(lon, 5) = -122.47602;
select * from nodes where (round(lat,5), round(lon,5)) not in 
                    (SELECT round(lat,5), round(lon,5) from elevation) LIMIT 5;
delete from round_nodes where lat = 0;
delete from round_nodes where round_lat = 0;
delete from round_nodes where round_lon = 0;
delete from elevation where lon = 0;
delete from elevation where lon = 0;
delete from elevation where lon = 0;
select * from elevation where round(lat,5) = 37.75627 AND round(lon,5) = -122.44316;
select * from elevation where round(lat,5) = 37.7582 AND round(lon,5) = -122.47101;
select count(*) from elevation;
select distinct count(*) from elevation group by lat,lon having count(*) > 1;
select distinct count(*), lat, lon from elevation group by lat,lon having count(*) > 1;
select sum(oldCount) from (select count(*), lat, lon from elevation group by lat,lon having count(*) > 1) m;
select sum(oldCount) from (select count(*) as oldCount, lat, lon from elevation group by lat,lon having count(*) > 1) m;
\d elevation;
select sum(oldCount) from (select count(*) as oldCount, lat, lon from elevation group by lat,lon having count(*) > 1) m;
select sum(oldCount) from (select count(*) as oldCount, lat, lon from elevation group by lat,lon having count(*) > 1) m;
select count(*) from elevation;
select count(*) from elevation;
\d round_nodes 
select count(*) from elevation;
select sum(oldCount) from (select count(*) as oldCount, lat, lon from elevation group by lat,lon having count(*) > 1) m;
select count(*) from elevation;
create index round_nodes_idx on round_nodes (round_lat, round_lon);
select sum(oldCount) from (select count(*) as oldCount, lat, lon from elevation group by lat,lon having count(*) > 1) m;
select count(*) from elevation;
alter table elevation add round_lat as round(lat,5);
alter table elevation add round_lat as (round(lat,5));
alter table elevation add column round_lat as (round(lat,5));
select sum(oldCount) from (select count(*) as oldCount, lat, lon from elevation group by lat,lon having count(*) > 1) m;
create table elevation_round as select distinct on (lat,lon) id, lat, lon, elevation, round(lat,5) as round_lat, round(lon,5) as round_lon from elevation;
\d elevation_round;
create index round_el_idx on elevation_round (round_lat, round_lon);
create index round_elev_idx on elevation_round (round_lat, round_lon);
select a.* from round_nodes a LEFT JOIN elevation_round b on a.round_lat = b.round_lat AND a.round_lon = b.round_lon where b.round_lon is null LIMIT 5;
select * from elevation_round where round_lat = 37.75470 and round_lon = -122.40084;
select * from elevation_round where round_lat = -122.39645 and round_lon = -122.39645;
select count(*) from elevation_round ;
select sum(oldCount) from (select count(*) as oldCount, lat, lon from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select sum(oldCount) from (select count(*) as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select count(*) from elevation_round ;
select * from elevation_round where round_lat = 37.72406 and round_lon = -122.44296;
select sum(oldCount) from (select count(*) as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
\d
\d elevation
drop table elevation;
create table elevation as select round_lat, round_lon from round_nodes;
alter table elevation add column elevation numeric(12,4);
drop table elevation;
create temp table p_temp as select distinct on (round_lat,round_lon) * from elevation_round;
truncate elevation_round;
insert into elevation_round select * from p_temp;
select count(*) elevation_round;
select * from elevation_round;
select count(*) elevation_round limit 10;
select * from elevation_round limit 1-;
select * from elevation_round limit 10;
select count(*) from elevation_round limit 10;
delete from elevation_round where lon is null;
select sum(oldCount) from (select count(*) as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select sum(oldCount),lat, lon from (select count(*),lat,lon as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select sum(oldCount),round_lat, round_lon from (select count(*),round_lat,round_lon as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select sum(oldCount),m.round_lat, m.round_lon from (select count(*),round_lat,round_lon as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
create table nodes_w_el as select a.id, a.round_lat, a.round_lon, b.elevation from round_nodes a, elevation_round b where a.round_lat = b.round_lat and a.round_lon = b.round_lon; 
select sum(oldCount) from (select count(*) as oldCount from nodes_w_el group by round_lat,round_lon having count(*) > 1) m;
select sum(oldCount) from (select count(*) as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select count(*) from elevation_round 
;
select sum(oldCount) from (select count(*) as oldCount from elevation_round group by id having count(*) > 1) m;
select sum(oldCount) from (select count(*) as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select sum(oldCount) from (select count(*) as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select count(*) from elevation_round;
select count(*) from elevation_round;
select count(*) from elevation_round;
select sum(oldCount) from (select count(*) as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select count(*) from elevation_round;
select sum(oldCount) from (select count(*) as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
\d round_nodes
select count(*) from (select count(*) as oldCount from elevation_round group by round_lat,round_lon having count(*) > 1) m;
select * from round_nodes where (round_lat, round_lon) not in (SELECT round_lat, round_lon from elevation_round) LIMIT 5;
select * from elevation_round where round_lat = 37.75326 and round_lon = -122.40070
;
select count(*) from round_nodes where (round_lat, round_lon) not in (SELECT round_lat, round_lon from elevation_round) LIMIT 5;
select * from round_nodes order by id limit 10;
select * from round_nodes order by id desc limit 10;
select * from nodes order by id limit 10;
select * from nodes order by id asclimit 10;
select * from nodes order by id asc limit 10;
select * from nodes order by id desc limit 10;
drop table round_nodes;
create table round_nodes as select *, round(lat,5) as round_lat, round(lon,5) as round_lon from nodes;
alter table round_nodes add column counter bigserial primary key;
select * from round_nodes limit 10;
\d elevation_round 
\d elevation_
\d elevation_id 
\d
drop table p_temp;
\d elevation_round;
create table elevation_test as id bigserial primary key, lat numeric(11,8), lon numeric(11,8), round_lat numeric(10,5), round_lon numeric(10,5), elevation;
create table elevation_test ( id bigserial primary key, lat numeric(11,8), lon numeric(11,8), round_lat numeric(10,5), round_lon numeric(10,5), elevation numeric(12,4));
select count(*) from elevation_test;
select count(*) from elevation_test;
select * from round_nodes where counter between 1421500 and 1422000;
select count(*) from elevation_test;
select sum(oldCount) from (select count(*) as oldCount from elevation_test group by round_lat,round_lon having count(*) > 1) m;
select count(*),round_lat, round_lon as oldCount from elevation_test group by round_lat,round_lon having count(*) > 1;
truncate table elevation_test;
create table empty_counters (counterStart bigint, counterEnd bigint);
select count(*) empty_counters;
select * empty_counters;
select count(*) from empty_counters;
truncate empty_counters;
select count(*) from empty_counters;
select count(*),round_lat, round_lon as oldCount from elevation_test group by round_lat,round_lon having count(*) > 1;
select count(*) from elevation_test;
select sum(oldCount) from (select count(*) as oldCount from elevation_test group by round_lat,round_lon having count(*) > 1) m;
select * from empty_counters;
q
;
truncate elevation_test;
truncate empty_containers;
\d
truncate empty_counters;
select count(*) from empty_counters ;
select count(*) from elevation_test;
\d round_nodes
select * from round_nodes limit 5;
select * from round_nodes where counter BETWEEN 10 and 20;
\c sf_routing 
\q
\c sf_routing 
\d
select count(*) from elevation_test;
select * from elevation_test limit 10;
select count(*) from elevation_test;
select count(*) from round_nodes;
select sum(oldCount) from (select count(*) as oldCount from elevation_test group by round_lat, round_lon) m;
select sum(oldCount) from (select count(*) as oldCount from elevation_test group by round_lat, round_lon having count(*)>1) m;
select sum(oldCount-1) from (select count(*) as oldCount from elevation_test group by round_lat, round_lon having count(*)>1) m;
\d
select * from nodes_w_el limit 10;
select count(*) from nodes_w_el limit 10;
select count(*) from empty_counters limit 10;
drop table empty_counters 
;
create table temp as select distinct on (round_lat, round_lon) * from elevation_test;
select * from temp limit 5;
truncate elevation_test;
insert into elevation_test select * from temp;
select * from elevation_test limit 5;
select count(*) from elevation_test;
drop table temp ;
create table nodes_with_elevation as select a.*, b.elevation from round_nodes a left join elevation_test b on a.round_lat = b.round_lat and a.round_lon = b.round_lon;
\d round_nodes;
select * from round_nodes where elevation is not null;
alter table round_nodes drop column elevation;
\d round_nodes;
create table nodes_with_elevation as select a.*, b.elevation from round_nodes a left join elevation_test b on a.round_lat = b.round_lat and a.round_lon = b.round_lon;
select count(*) from nodes_with_elevation where elevation is null;
select * from nodes_with_elevation limit 10;
\d
drop table nodes_w_el ;
drop table elevation_id ;
drop table elevation_round ;
\d
create table nodes_no_el as select * from nodes_with_elevation where elevation is null;
select * from nodes_with_elevation limit 10;
select * from nodes_with_elevation order by counter limit 10;
select * from nodes_no_el order by counter;
select count(*) from nodes_no_el where numofuse =0;
\q
\c sf_routing
\d
\q
\c sf_routing
select count(*) from nodes_no_el where elevation is null;
select count(*) from nodes_no_el where elevation is not null;
select count(*) from elevation_test
;
\q
\c sf_routing
select count(*) from nodes_with_elevation ;
select count(*) from nodes_with_elevation where elevation is not null;
select count(*) from nodes_no_el;
select count(*) from elevation_test;
\q
\c sf_routing
select count(*) from elevation_test;
select sum(oldCount-1) from (select count(*) as oldCount from elevation_test group by round_lat, round_lon having count(*)>1) m;
select sum(oldCount-1) from (select count(*) as oldCount from elevation_test group by round_lat, round_lon having count(*)>1) m;
\d nodes_no_el
create table temp as select distinct on (round_lat, round_lon) * from elevation_test;
truncate elevation_test;
insert into elevation_test select * from temp;
select count(*) from elevation_test
;
create table temp_nodes as select id, a.lon, a.lat, a.numofuse, a.round_lat, a.round_lon, counter, b.elevation from nodes_no_el a left join elevation_test b on a.round_lat=b.round_lat and a.round_lon=b.round_lon;
create table temp_nodes as select a.id, a.lon, a.lat, a.numofuse, a.round_lat, a.round_lon, counter, b.elevation from nodes_no_el a left join elevation_test b on a.round_lat=b.round_lat and a.round_lon=b.round_lon;
select count(*) from nodes_with_elevation where elevation is null;
select count(*) from temp_nodes where elevation is null;
drop table nodes_no_el ;
alter table temp_nodes rename nodes_no_el;
alter table temp_nodes rename to nodes_no_el;
drop table temp;
select sum(oldCount-1) from (select count(*) as oldCount from elevation_test group by round_lat, round_lon having count(*)>1) m;
\d elevation_test
create table temp_nodes as select a.id, a.lon, a.lat, a.numofuse, a.round_lat, a.round_lon, counter, b.elevation from nodes_no_el a left join elevation_test b on a.round_lat=b.round_lat and a.round_lon=b.round_lon;
select count(*) from temp_nodes where elevation is null;
\d temp_nodes 
\d nodes_with_elevation 
select * from nodes_with_elevation where elevation is null limit 10;
select * from nodes_with_elevation where elevation is null order by counter limit 10;
select * from temp_nodes order by counter;
select count(*) from temp_nodes ;
select count(*) from nodes_with_elevation where elevation is null;
delete from nodes_with_elevation where elevation is null;
insert into nodes_with_elevation select * from temp_nodes;
select count(*) from nodes_with_elevation ;
drop table temp_nodes;
\d
drop table nodes_no_el;
drop table round_nodes ;
drop sequence round_nodes;
drop sequence round_nodes_counter_seq;
\d elevation_test_id_seq ;
\q
\d
\d nodes_with_elevation 
alter table nodes_with_elevation add column geog geography(point, 4326)
;
update nodes_with_elevation set geog = st_makepoint(lon, lat);
\d nodes_with_elevation 
select * from nodes_with_elevation limit 10;
select a.*, st_distance(geog, poi) as distance from nodes_with_elevation a, (select st_makepoint(-122.4775,37.773127)::geography as poi) as poi order by st_distance(geog, poi) limit 5;
select id, lat, lon, st_distance(geog, poi) as distance from nodes_with_elevation a, (select st_makepoint(-122.4775,37.773127)::geography as poi) as poi order by st_distance(geog, poi) limit 5;
create index on nodes_with_elevation (geog);
create index on nodes_with_elevation (geog);
create index on nodes_with_elevation (geog);
\s nodes_with_elevation;
